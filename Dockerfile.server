# syntax=docker/dockerfile:1

FROM node:20-alpine AS base
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm

# Copy only package files first for caching
COPY server/package.json server/pnpm-lock.yaml ./
COPY server/tsconfig.json ./
COPY server/nuxt.config.ts ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy the rest of the server source
COPY server/ ./

# --- Production build stage ---
FROM base AS build
RUN pnpm build

# --- Production runtime stage ---
FROM node:20-alpine AS prod
WORKDIR /app
RUN npm install -g pnpm
COPY --from=build /app ./
EXPOSE 3000
ENV NODE_ENV=production
CMD ["pnpm", "start"]

# --- Development runtime stage ---
FROM base AS dev
EXPOSE 3000
ENV NODE_ENV=development
CMD ["pnpm", "dev"] 